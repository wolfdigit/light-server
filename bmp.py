from util import Cmd

picUpper = [
"000,000,000,00 ,000,000,000,0 0,000,  0,"+"0 0,0  ,000,000,000,000,000,000, 00,000,"+"0 0,0 0,0 0,0 0,0 0,000,",
"0 0,0 0,0  ,0 0,0  ,0  ,0  ,0 0, 0 ,  0,"+"0 0,0  ,000,0 0,0 0,0 0,0 0,0 0,0  , 0 ,"+"0 0,0 0,0 0,0 0,0 0,  0,",
"000,00 ,0  ,0 0,00 ,00 ,0 0,000, 0 ,  0,"+"00 ,0  ,0 0,0 0,0 0,000,0 0,00 , 0 , 0 ,"+"0 0,0 0,0 0, 0 ,000, 0 ,",
"0 0,0 0,0  ,0 0,0  ,0  ,0 0,0 0, 0 ,0 0,"+"0 0,0  ,0 0,0 0,0 0,0  ,000,0 0,  0, 0 ,"+"0 0,0 0,000,0 0, 0 ,0  ,",
"0 0,000,000,00 ,000,0  ,000,0 0,000,000,"+"0 0,000,0 0,0 0,000,0  ,000,0 0,00 , 0 ,"+"000, 0 ,000,0 0, 0 ,000,",
]
picLower = [
"   ,0  ,   ,  0,   ,  0,   ,0  , 0 ,  0,"+"0  , 0 ,   ,   ,   ,   ,   ,   ,   , 0 ,"+"   ,   ,   ,   ,   ,   ,",
"   ,0  ,   ,  0,   , 0 ,000,0  ,   ,   ,"+"0  , 0 ,   ,   ,   ,000,000,   ,   ,000,"+"   ,   ,   ,   ,0 0,   ,",
" 00,00 ,000, 00, 0 ,000,000,000, 0 ,  0,"+"0 0, 0 ,00 ,00 ,000,0 0,0 0,000, 00, 0 ,"+"0 0,0 0,0 0,0 0,000,00 ,",
"0 0,0 0,0  ,0 0,000, 0 ,  0,0 0, 0 ,0 0,"+"00 , 0 ,000,0 0,0 0,000,000,0  , 0 , 0 ,"+"0 0,0 0,000, 0 ,  0, 0 ,",
" 00,00 ,000, 00,00 , 0 ,00 ,0 0, 0 , 00,"+"0 0, 0 ,0 0,0 0,000,0  ,  0,0  ,00 ,  0,"+" 00, 0 ,000,0 0,00 , 00,",
]
picNumber = [
"000, 00,000,000,0 0,000,000,000,000,000,",
"0 0,  0,  0,  0,0 0,0  ,0  ,  0,0 0,0 0,",
"0 0,  0,000,000,000,000,000,  0,000,000,",
"0 0,  0,0  ,  0,  0,  0,0 0,  0,0 0,  0,",
"000,  0,000,000,  0,000,000,  0,000,000,",
]
#  !"#$%&'()*+,-./
picSym0 = [
    "   , 0 ,0 0,0 0, 0 ,0 0,   , 0 ,  0,0  , 0 ,   ,   ,   ,   ,  0,",
    "   , 0 ,0 0,000, 00,  0,00 , 0 , 0 , 0 ,000, 0 ,   ,   ,   ,  0,",
    "   , 0 ,0 0,0 0, 0 , 0 ,000, 0 , 0 , 0 , 0 ,000,   ,000,   , 0 ,",
    "   ,   ,   ,000,00 ,0  ,00 ,   , 0 , 0 ,0 0, 0 ,00 ,   ,   ,0  ,",
    "   , 0 ,   ,0 0, 0 ,0 0,000,   ,  0,0  ,   ,   , 0 ,   , 0 ,0  ,",
]
# 0123456789
# :;<=>?@
picSym1 = [
    "   ,   ,  0,   ,0  ,000, 0 ,",
    " 0 , 0 , 0 ,000, 0 ,  0,0 0,",
    "   ,   ,0  ,   ,  0, 00,000,",
    " 0 , 0 , 0 ,000, 0 ,   ,000,",
    "   , 0 ,  0,   ,0  , 0 , 0 ,",
]
# ABCDEFGHIJKLMNOPQRSTUVWXYZ
# [\]^_`
picSym2 = [
    "000,0  ,000, 0 ,   , 0 ,",
    "0  ,0  ,  0,0 0,   , 0 ,",
    "0  , 0 ,  0,   ,   ,  0,",
    "0  ,  0,  0,   ,   ,   ,",
    "000,  0,000,   ,000,   ,",
]
# abcdefghijklmnopqrstuvwxyz
# {|}~
picSym3 = [
    " 00, 0 ,00 ,   ,",
    " 0 , 0 , 0 ,   ,",
    "0  , 0 ,  0, 00,",
    " 0 , 0 , 0 ,0  ,",
    " 00, 0 ,00 ,   ,",
]

def getMap(ch):
    def getCh(arr, idx):
        return [
            arr[x][idx*4:idx*4+3] for x in range(5)
        ]
    idx = 0
    if ch.islower():
        idx = ord(ch) - ord('a')
        return getCh(picLower, idx)
    elif ch.isupper():
        idx = ord(ch) - ord('A')
        return getCh(picUpper, idx)
    elif ch.isdigit():
        idx = ord(ch) - ord('0')
        return getCh(picNumber, idx)
    elif ch in " !\"#$%&'()*+,-./":
        idx = ord(ch) - ord(' ')
        return getCh(picSym0, idx)
    elif ch in ":;<=>?@":
        idx = ord(ch) - ord(':')
        return getCh(picSym1, idx)
    elif ch in "[\]^_`":
        idx = ord(ch) - ord('[')
        return getCh(picSym2, idx)
    elif ch in "{|}~":
        idx = ord(ch) - ord('{')
        return getCh(picSym3, idx)
    else:
        return [
            "   ", "   ", "   ", "   ", "   "
        ]

def getCmds(offset_x, offset_y, ch, fgcolor, bgcolor):
    chMap = getMap(ch)
    pxs = []
    for x in range(5):
        for y in range(3):
            if chMap[x][y] == " ":
                pxs.append(bgcolor)
            else:
                pxs.append(fgcolor)
    return [Cmd(offset_x, offset_y, offset_x+5, offset_y+3, pxs)]